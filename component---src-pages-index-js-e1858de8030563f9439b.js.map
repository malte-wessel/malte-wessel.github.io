{"version":3,"sources":["webpack:///./src/components/SEO/index.js","webpack:///./src/pages/index.js","webpack:///./src/pages/styles.module.scss"],"names":["SEO","_ref","description","lang","meta","keywords","title","react_default","a","createElement","gatsby_browser_entry","query","render","data","metaDescription","site","siteMetadata","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_4017075492","defaultProps","IndexPage","className","styles","container","components_SEO","module","exports","screenSmall","screenMedium","screenLarge","screenXLarge"],"mappings":"wJAgBMA,EAAM,SAAAC,GAAkD,IAA/CC,EAA+CD,EAA/CC,YAAaC,EAAkCF,EAAlCE,KAAMC,EAA4BH,EAA5BG,KAAMC,EAAsBJ,EAAtBI,SAAUC,EAAYL,EAAZK,MAC9C,OACIC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACIC,MAfM,aAgBNC,OAAQ,SAAAC,GACJ,IAAMC,EACFZ,GAAeW,EAAKE,KAAKC,aAAad,YAC1C,OACIK,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CACIU,eAAgB,CACZf,QAEJG,MAAOA,EACPa,cAAa,QAAUN,EAAKE,KAAKC,aAAaV,MAC9CF,KAAM,CACF,CACIgB,KAAI,cACJC,QAASP,GAEb,CACIQ,SAAQ,WACRD,QAASf,GAEb,CACIgB,SAAQ,iBACRD,QAASP,GAEb,CACIQ,SAAQ,UACRD,QAAO,WAEX,CACID,KAAI,eACJC,QAAO,WAEX,CACID,KAAI,kBACJC,QAASR,EAAKE,KAAKC,aAAaO,QAEpC,CACIH,KAAI,gBACJC,QAASf,GAEb,CACIc,KAAI,sBACJC,QAASP,IAGZU,OACGnB,EAASoB,OAAS,EACZ,CACIL,KAAI,WACJC,QAAShB,EAASqB,KAAT,OAEb,IAETF,OAAOpB,MAtD5BS,KAAAc,KA8DR3B,EAAI4B,aAAe,CACfzB,KAAI,KACJC,KAAM,GACNC,SAAU,IAGCL,0BC1DA6B,UAxBG,kBACdtB,EAAAC,EAAAC,cAAA,OAAKqB,UAAWC,IAAOC,WACnBzB,EAAAC,EAAAC,cAACwB,EAAD,CACI3B,MAAM,QACND,SAAU,CACN,oBACA,aACA,aACA,YAEJH,YAAY,qEAEhBK,EAAAC,EAAAC,cAAA,2CACmCF,EAAAC,EAAAC,cAAA,mCAAmC,IADtE,gDAIAF,EAAAC,EAAAC,cAAA,gCACwBF,EAAAC,EAAAC,cAAA,uCADxB,mPCnBRyB,EAAAC,QAAA,CAAkBC,YAAA,OAAAC,aAAA,SAAAC,YAAA,OAAAC,aAAA,OAAAP,UAAA","file":"component---src-pages-index-js-e1858de8030563f9439b.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`;\n\nconst SEO = ({ description, lang, meta, keywords, title }) => {\n    return (\n        <StaticQuery\n            query={detailsQuery}\n            render={data => {\n                const metaDescription =\n                    description || data.site.siteMetadata.description;\n                return (\n                    <Helmet\n                        htmlAttributes={{\n                            lang\n                        }}\n                        title={title}\n                        titleTemplate={`%s · ${data.site.siteMetadata.title}`}\n                        meta={[\n                            {\n                                name: `description`,\n                                content: metaDescription\n                            },\n                            {\n                                property: `og:title`,\n                                content: title\n                            },\n                            {\n                                property: `og:description`,\n                                content: metaDescription\n                            },\n                            {\n                                property: `og:type`,\n                                content: `website`\n                            },\n                            {\n                                name: `twitter:card`,\n                                content: `summary`\n                            },\n                            {\n                                name: `twitter:creator`,\n                                content: data.site.siteMetadata.author\n                            },\n                            {\n                                name: `twitter:title`,\n                                content: title\n                            },\n                            {\n                                name: `twitter:description`,\n                                content: metaDescription\n                            }\n                        ]\n                            .concat(\n                                keywords.length > 0\n                                    ? {\n                                          name: `keywords`,\n                                          content: keywords.join(`, `)\n                                      }\n                                    : []\n                            )\n                            .concat(meta)}\n                    />\n                );\n            }}\n        />\n    );\n};\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    keywords: []\n};\n\nexport default SEO;\n","import React from 'react';\nimport SEO from '@components/SEO';\nimport styles from './styles.module.scss';\n\nconst IndexPage = () => (\n    <div className={styles.container}>\n        <SEO\n            title=\"Hello\"\n            keywords={[\n                'software engineer',\n                'düsseldorf',\n                'javascript',\n                'frontend'\n            ]}\n            description=\"Personal website of Malte Wessel, Software Engineer, Düsseldorf.\"\n        />\n        <p>\n            Hello, my name is Malte, I’m a <strong>Software Engineer</strong>{' '}\n            currently working at trivago in Düsseldorf.\n        </p>\n        <p>\n            I am specialized in <strong>frontend technologies</strong>,\n            especially JavaScript. I love planning, implementing and maintaining\n            digital products.\n        </p>\n    </div>\n);\n\nexport default IndexPage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenSmall\":\"24em\",\"screenMedium\":\"46.8em\",\"screenLarge\":\"50em\",\"screenXLarge\":\"73em\",\"container\":\"_3QU4zQo_\"};"],"sourceRoot":""}